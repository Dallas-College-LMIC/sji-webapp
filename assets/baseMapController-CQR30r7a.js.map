{"version":3,"file":"baseMapController-CQR30r7a.js","sources":["../../src/js/constants.js","../../src/js/mapUtils.js","../../src/js/api.js","../../src/js/controllers/baseMapController.js"],"sourcesContent":["export const MAP_CONFIG = {\n    accessToken: \"pk.eyJ1IjoiY2dpbGNocmllc3QtZGNjY2QiLCJhIjoiY200aXNueG5hMDV6czJtcTBweTFlZG9weSJ9.BV1l4NoP08wC2vlkhYR2Pg\",\n    style: \"mapbox://styles/mapbox/light-v10\",\n    center: [-97.0336, 32.8999],\n    zoom: 10.8,\n    hash: true,\n    attributionControl: true,\n    customAttribution: '<b><a href=\"https://github.com/NYCPlanning/td-travelshed/blob/master/Transit%20Travelshed.pdf\" target=\"_blank\">Detailed Methodology</a></b>',\n    preserveDrawingBuffer: true\n};\n\nexport const COLOR_SCHEMES = {\n    zscoreCategories: [\n        \"<-2.5SD\",\n        \"-2.5SD ~ -1.5SD\", \n        \"-1.5SD ~ -0.5SD\",\n        \"-0.5SD ~ +0.5SD\",\n        \"+0.5SD ~ +1.5SD\",\n        \"+1.5SD ~ +2.5SD\",\n        \">=+2.5SD\"\n    ],\n    zscoreColors: [\n        \"rgba(43, 131, 186, 0.8)\",\n        \"rgba(128, 191, 172, 0.8)\",\n        \"rgba(199, 233, 173, 0.8)\",\n        \"rgba(255, 255, 191, 0.8)\",\n        \"rgba(254, 201, 128, 0.8)\",\n        \"rgba(241, 124, 74, 0.8)\",\n        \"rgba(215, 25, 28, 0.8)\"\n    ],\n    outlineColor: \"rgba(0, 0, 0, 0.1)\"\n};\n\nexport const BRANDING = {\n    colors: {\n        primary: \"rgba(0, 51, 133, 1)\",\n        secondary: \"rgba(229, 38, 38, 0.9)\",\n        secondaryHover: \"rgba(229, 38, 38, 1)\"\n    },\n    logoUrl: \"https://raw.githubusercontent.com/Dallas-College-LMIC/spatial-jobs-index/e8094a75034b8627e629a350e0f1a2a81a0f468a/DCLOGO_RGB_MASTER_MARK-V-WHITE.png\",\n    homeUrl: \"https://www.dallascollege.edu/business-industry/lmic/pages/default.aspx\"\n};","import { MAP_CONFIG, COLOR_SCHEMES } from './constants.js';\n\nexport class MapManager {\n    constructor(containerId) {\n        this.map = null;\n        this.containerId = containerId;\n        this.popup = null;\n        this.initializeMap();\n    }\n\n    initializeMap() {\n        mapboxgl.accessToken = MAP_CONFIG.accessToken;\n        \n        this.map = new mapboxgl.Map({\n            container: this.containerId,\n            ...MAP_CONFIG\n        });\n\n        this.popup = new mapboxgl.Popup({\n            closeButton: true,\n            closeOnClick: false,\n            anchor: \"bottom\",\n            offset: 0,\n            maxWidth: \"none\"\n        });\n\n        this.addControls();\n    }\n\n    addControls() {\n        this.map.addControl(\n            new mapboxgl.FullscreenControl({\n                container: document.querySelector(\"body\")\n            }),\n            \"bottom-left\"\n        );\n\n        this.map.addControl(\n            new mapboxgl.NavigationControl({\n                showCompass: true,\n                showZoom: true,\n                visualizePitch: true\n            }),\n            \"bottom-left\"\n        );\n    }\n\n    addSource(sourceId, data) {\n        if (this.map.getSource(sourceId)) {\n            this.map.getSource(sourceId).setData(data);\n        } else {\n            this.map.addSource(sourceId, {\n                type: \"geojson\",\n                data: data\n            });\n        }\n    }\n\n    createLayerColor(propertyName) {\n        const layerColor = [\"match\", [\"get\", propertyName]];\n        \n        COLOR_SCHEMES.zscoreCategories.forEach((category, index) => {\n            layerColor.push(category, COLOR_SCHEMES.zscoreColors[index]);\n        });\n        \n        layerColor.push(\"#000000\"); // fallback color\n        return layerColor;\n    }\n\n    addLayer(layerId, sourceId, propertyName, visibility = 'visible') {\n        if (this.map.getLayer(layerId)) {\n            this.map.removeLayer(layerId);\n        }\n\n        this.map.addLayer({\n            id: layerId,\n            type: 'fill',\n            source: sourceId,\n            layout: {\n                visibility: visibility\n            },\n            paint: {\n                'fill-color': this.createLayerColor(propertyName),\n                'fill-outline-color': COLOR_SCHEMES.outlineColor\n            }\n        });\n    }\n\n    setLayerVisibility(layerId, visibility) {\n        if (this.map.getLayer(layerId)) {\n            this.map.setLayoutProperty(layerId, 'visibility', visibility);\n        }\n    }\n\n    addPopupEvents(layerId, title, scoreProperty) {\n        this.map.on('click', layerId, (e) => {\n            const coordinates = e.lngLat;\n            const properties = e.features[0].properties;\n            const score = properties[scoreProperty];\n            \n            const description = `\n                <b>Tract: </b><span>${properties.GEOID}</span><br>\n                <b>${title}: </b><span>${score ? score.toFixed(2) : 'N/A'}</span>\n            `;\n            \n            this.popup\n                .setLngLat(coordinates)\n                .setHTML(description)\n                .addTo(this.map);\n        });\n\n        this.map.on('mouseenter', layerId, () => {\n            this.map.getCanvas().style.cursor = 'pointer';\n        });\n\n        this.map.on('mouseleave', layerId, () => {\n            this.map.getCanvas().style.cursor = '';\n        });\n    }\n\n    onStyleLoad(callback) {\n        this.map.on('style.load', callback);\n    }\n}","export class ApiService {\n    constructor() {\n        this.baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000';\n    }\n\n    async fetchData(endpoint) {\n        try {\n            const response = await fetch(`${this.baseUrl}${endpoint}`);\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(`Error fetching data from ${endpoint}:`, error);\n            throw error;\n        }\n    }\n\n    async getGeojsonData(params = {}) {\n        const queryString = new URLSearchParams(params).toString();\n        const endpoint = queryString ? `/geojson?${queryString}` : '/geojson';\n        return this.fetchData(endpoint);\n    }\n\n    async getOccupationIds() {\n        return this.fetchData('/occupation_ids');\n    }\n\n    getExportUrl(params = {}) {\n        const queryString = new URLSearchParams(params).toString();\n        return queryString ? `${this.baseUrl}/geojson?${queryString}` : `${this.baseUrl}/geojson`;\n    }\n}","import { MapManager } from '../mapUtils.js';\nimport { ApiService } from '../api.js';\n\n/**\n * Base class for map controllers with common functionality\n */\nexport class BaseMapController {\n    constructor(containerId, sourceId = 'map_data') {\n        this.containerId = containerId;\n        this.sourceId = sourceId;\n        this.mapManager = new MapManager(containerId);\n        this.apiService = new ApiService();\n        this.isInitialized = false;\n    }\n\n    /**\n     * Initialize the map controller - to be implemented by subclasses\n     */\n    async initialize() {\n        throw new Error('initialize() method must be implemented by subclass');\n    }\n\n    /**\n     * Common map initialization with empty source\n     */\n    initializeMapWithEmptySource() {\n        return new Promise((resolve) => {\n            this.mapManager.onStyleLoad(async () => {\n                // Initialize with empty source\n                this.mapManager.addSource(this.sourceId, {\n                    type: \"FeatureCollection\",\n                    features: []\n                });\n                \n                this.isInitialized = true;\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Update export link with current parameters\n     */\n    updateExportLink(params = {}) {\n        const exportElement = document.getElementById('exp');\n        if (exportElement) {\n            exportElement.href = this.apiService.getExportUrl(params);\n        }\n    }\n\n    /**\n     * Show loading state for an element\n     */\n    showLoading(elementId) {\n        const element = document.getElementById(elementId);\n        if (element) {\n            element.style.display = 'block';\n            element.textContent = 'Loading...';\n        }\n    }\n\n    /**\n     * Hide loading state for an element\n     */\n    hideLoading(elementId) {\n        const element = document.getElementById(elementId);\n        if (element) {\n            element.style.display = 'none';\n        }\n    }\n\n    /**\n     * Show error message for an element\n     */\n    showError(elementId, message) {\n        const element = document.getElementById(elementId);\n        if (element) {\n            element.style.display = 'block';\n            element.textContent = message;\n            element.style.color = '#dc3545';\n        }\n    }\n\n    /**\n     * Clear map layers and reset to empty state\n     */\n    clearMap() {\n        // Remove all custom layers\n        this.getLayerIds().forEach(layerId => {\n            if (this.mapManager.map.getLayer(layerId)) {\n                this.mapManager.map.removeLayer(layerId);\n            }\n        });\n\n        // Reset source to empty\n        this.mapManager.addSource(this.sourceId, {\n            type: \"FeatureCollection\",\n            features: []\n        });\n\n        // Reset export link\n        this.updateExportLink();\n    }\n\n    /**\n     * Get layer IDs managed by this controller - to be implemented by subclasses\n     */\n    getLayerIds() {\n        return [];\n    }\n}"],"names":["MAP_CONFIG","COLOR_SCHEMES","MapManager","containerId","sourceId","data","propertyName","layerColor","category","index","layerId","visibility","title","scoreProperty","e","coordinates","properties","score","description","callback","ApiService","endpoint","response","error","params","queryString","BaseMapController","resolve","exportElement","elementId","element","message"],"mappings":"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"}