{"version":3,"file":"shared-C0gk7HXj.js","sources":["../../src/js/utils/errorHandler.js","../../src/js/utils/appInitializer.js"],"sourcesContent":["/**\n * Centralized error handling utilities\n */\nexport class ErrorHandler {\n    /**\n     * Display a user-friendly error message in a container\n     * @param {string} containerId - ID of the container element\n     * @param {Error} error - The error that occurred\n     * @param {string} context - Context where the error occurred\n     */\n    static showErrorMessage(containerId, error, context = 'application') {\n        const container = document.getElementById(containerId);\n        if (!container) {\n            console.error('Error container not found:', containerId);\n            return;\n        }\n\n        const apiBaseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000';\n        \n        container.innerHTML = `\n            <div style=\"display: flex; align-items: center; justify-content: center; height: 100vh; background: #f8f9fa;\">\n                <div style=\"text-align: center; padding: 2rem; max-width: 500px;\">\n                    <h3 style=\"color: #dc3545; margin-bottom: 1rem;\">\n                        ${this.getErrorTitle(error, context)}\n                    </h3>\n                    <p style=\"color: #6c757d; margin-bottom: 1rem;\">\n                        ${this.getErrorMessage(error, context)}\n                    </p>\n                    <p style=\"color: #6c757d; font-size: 0.9rem;\">\n                        Expected API endpoint: <code>${apiBaseUrl}</code>\n                    </p>\n                    <p style=\"color: #6c757d; font-size: 0.9rem;\">\n                        Check the console for more details.\n                    </p>\n                    <button onclick=\"location.reload()\" \n                            style=\"margin-top: 1rem; padding: 0.5rem 1rem; background: #0d6efd; color: white; border: none; border-radius: 0.25rem; cursor: pointer;\">\n                        Retry\n                    </button>\n                </div>\n            </div>\n        `;\n    }\n\n    /**\n     * Get appropriate error title based on error type and context\n     */\n    static getErrorTitle(error, context) {\n        if (error.message?.includes('fetch') || error.name === 'TypeError') {\n            return 'API Connection Error';\n        }\n        if (context === 'map') {\n            return 'Map Initialization Error';\n        }\n        return 'Application Error';\n    }\n\n    /**\n     * Get user-friendly error message\n     */\n    static getErrorMessage(error, context) {\n        if (error.message?.includes('fetch') || error.name === 'TypeError') {\n            return 'Unable to connect to the data API. This application requires a backend API server to provide GeoJSON data.';\n        }\n        if (context === 'map') {\n            return 'Failed to initialize the interactive map. Please check your internet connection and try again.';\n        }\n        return 'An unexpected error occurred while loading the application.';\n    }\n\n    /**\n     * Log error with context for debugging\n     */\n    static logError(error, context, additionalInfo = {}) {\n        console.group(`ðŸ”´ Error in ${context}`);\n        console.error('Error:', error);\n        console.error('Stack:', error.stack);\n        console.error('Additional info:', additionalInfo);\n        console.groupEnd();\n    }\n}","import { ErrorHandler } from './errorHandler.js';\n\n/**\n * Base application initializer with common patterns\n */\nexport class AppInitializer {\n    /**\n     * Initialize an application controller with error handling\n     * @param {string} containerId - ID of the container element\n     * @param {Class} ControllerClass - The controller class to instantiate\n     * @param {string} appName - Name of the app for error logging\n     */\n    static async initialize(containerId, ControllerClass, appName = 'Application') {\n        // Wait for DOM to be ready\n        if (document.readyState === 'loading') {\n            await new Promise(resolve => {\n                document.addEventListener('DOMContentLoaded', resolve);\n            });\n        }\n\n        try {\n            console.log(`ðŸš€ Initializing ${appName}...`);\n            const controller = new ControllerClass(containerId);\n            console.log(`âœ… ${appName} initialized successfully`);\n            return controller;\n        } catch (error) {\n            ErrorHandler.logError(error, appName.toLowerCase());\n            ErrorHandler.showErrorMessage(containerId, error, 'application');\n            throw error; // Re-throw for caller to handle if needed\n        }\n    }\n\n    /**\n     * Setup global error handlers\n     */\n    static setupGlobalErrorHandlers() {\n        // Handle unhandled promise rejections\n        window.addEventListener('unhandledrejection', (event) => {\n            ErrorHandler.logError(event.reason, 'unhandled-promise');\n            event.preventDefault(); // Prevent the default browser error handling\n        });\n\n        // Handle general errors\n        window.addEventListener('error', (event) => {\n            ErrorHandler.logError(event.error, 'global-error', {\n                filename: event.filename,\n                lineno: event.lineno,\n                colno: event.colno\n            });\n        });\n    }\n}"],"names":["ErrorHandler","containerId","error","context","container","apiBaseUrl","_a","additionalInfo","AppInitializer","ControllerClass","appName","resolve","controller","event"],"mappings":"ssBAGO,MAAMA,CAAa,CAOtB,OAAO,iBAAiBC,EAAaC,EAAOC,EAAU,cAAe,CAC3D,MAAAC,EAAY,SAAS,eAAeH,CAAW,EACrD,GAAI,CAACG,EAAW,CACJ,QAAA,MAAM,6BAA8BH,CAAW,EACvD,MAAA,CAGJ,MAAMI,EAAa,oCAEnBD,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA,0BAIJ,KAAK,cAAcF,EAAOC,CAAO,CAAC;AAAA;AAAA;AAAA,0BAGlC,KAAK,gBAAgBD,EAAOC,CAAO,CAAC;AAAA;AAAA;AAAA,uDAGPE,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAiB7D,OAAO,cAAcH,EAAOC,EAAS,OACjC,OAAIG,EAAAJ,EAAM,UAAN,MAAAI,EAAe,SAAS,UAAYJ,EAAM,OAAS,YAC5C,uBAEPC,IAAY,MACL,2BAEJ,mBAAA,CAMX,OAAO,gBAAgBD,EAAOC,EAAS,OACnC,OAAIG,EAAAJ,EAAM,UAAN,MAAAI,EAAe,SAAS,UAAYJ,EAAM,OAAS,YAC5C,6GAEPC,IAAY,MACL,iGAEJ,6DAAA,CAMX,OAAO,SAASD,EAAOC,EAASI,EAAiB,CAAA,EAAI,CACzC,QAAA,MAAM,eAAeJ,CAAO,EAAE,EAC9B,QAAA,MAAM,SAAUD,CAAK,EACrB,QAAA,MAAM,SAAUA,EAAM,KAAK,EAC3B,QAAA,MAAM,mBAAoBK,CAAc,EAChD,QAAQ,SAAS,CAAA,CAEzB,CC1EO,MAAMC,CAAe,CAOxB,aAAa,WAAWP,EAAaQ,EAAiBC,EAAU,cAAe,CAEvE,SAAS,aAAe,WACxB,MAAM,IAAI,QAAQC,GAAW,CACzB,SAAS,iBAAiB,mBAAoBA,CAAO,CACrE,CAAa,EAGL,GAAI,CACA,QAAQ,IAAI,mBAAmBD,CAAO,KAAK,EAC3C,MAAME,EAAa,IAAIH,EAAgBR,CAAW,EAClD,eAAQ,IAAI,KAAKS,CAAO,2BAA2B,EAC5CE,CACV,OAAQV,EAAO,CACZ,MAAAF,EAAa,SAASE,EAAOQ,EAAQ,YAAW,CAAE,EAClDV,EAAa,iBAAiBC,EAAaC,EAAO,aAAa,EACzDA,CAClB,CACA,CAKI,OAAO,0BAA2B,CAE9B,OAAO,iBAAiB,qBAAuBW,GAAU,CACrDb,EAAa,SAASa,EAAM,OAAQ,mBAAmB,EACvDA,EAAM,eAAc,CAChC,CAAS,EAGD,OAAO,iBAAiB,QAAUA,GAAU,CACxCb,EAAa,SAASa,EAAM,MAAO,eAAgB,CAC/C,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,MAAOA,EAAM,KAC7B,CAAa,CACb,CAAS,CACT,CACA"}