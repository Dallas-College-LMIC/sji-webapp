import{A as i}from"./shared-C0gk7HXj.js";import{B as r}from"./baseMapController-CQR30r7a.js";class n extends r{constructor(a){super(a,"occupation_data"),this.currentOccupationId=null,this.geojsonData=null,this.initialize()}async initialize(){await this.initializeMapWithEmptySource(),this.loadOccupationIds().catch(a=>{console.error("Failed to load occupation IDs:",a)})}async loadOccupationIds(){this.showLoading("loading");try{const a=this.getCachedOccupationIds();if(a){console.log("Using cached occupation IDs"),this.populateOccupationDropdown(a),this.hideLoading("loading");return}const c=await this.apiService.getOccupationIds();console.log("Loaded occupation IDs response:",c);const o=c.occupation_ids||c;this.cacheOccupationIds(o),this.populateOccupationDropdown(o),this.hideLoading("loading")}catch(a){console.error("Error loading occupation IDs:",a),this.showError("loading","Error loading occupations")}}populateOccupationDropdown(a){const c=$("#occupation-select");c.find("option:not(:first)").remove(),a.forEach(o=>{c.append(new Option(o,o))}),c.select2({placeholder:"Search and select an occupation...",allowClear:!0,width:"100%"}),c.on("change",o=>{const t=$(o.target).val();t?this.loadOccupationData(t):this.clearMap()})}async loadOccupationData(a){this.currentOccupationId=a;try{const c=await this.apiService.getGeojsonData({occupation_id:a});console.log("Fetched occupation data:",c),this.geojsonData=c,this.mapManager.addSource(this.sourceId,c),this.mapManager.map.getLayer("occupation-layer")&&this.mapManager.map.removeLayer("occupation-layer"),this.addOccupationLayer(),this.updateExportLink({occupation_id:a})}catch(c){console.error("Error loading occupation data:",c)}}addOccupationLayer(){const a=`occupation_${this.currentOccupationId}_zscore_cat`;this.mapManager.addLayer("occupation-layer",this.sourceId,a,"visible"),this.addPopupForOccupation()}addPopupForOccupation(){const a=`occupation_${this.currentOccupationId}_zscore`;this.mapManager.addPopupEvents("occupation-layer",`Occupation: ${this.currentOccupationId}`,a)}clearMap(){super.clearMap(),this.currentOccupationId=null}getLayerIds(){return["occupation-layer"]}getCachedOccupationIds(){const a="occupation_ids_cache",c="occupation_ids_cache_time";try{const t=localStorage.getItem(c),e=localStorage.getItem(a);return!t||!e?null:Date.now()-parseInt(t)>864e5?(localStorage.removeItem(a),localStorage.removeItem(c),null):JSON.parse(e)}catch(t){return console.error("Error reading from cache:",t),null}}cacheOccupationIds(a){const c="occupation_ids_cache",o="occupation_ids_cache_time";try{localStorage.setItem(c,JSON.stringify(a)),localStorage.setItem(o,Date.now().toString())}catch(t){console.error("Error writing to cache:",t)}}clearOccupationCache(){localStorage.removeItem("occupation_ids_cache"),localStorage.removeItem("occupation_ids_cache_time")}}i.setupGlobalErrorHandlers();i.initialize("mainmap",n,"Occupation Map");
//# sourceMappingURL=occupation-CkqzKl-B.js.map
