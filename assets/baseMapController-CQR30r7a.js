const l={accessToken:"pk.eyJ1IjoiY2dpbGNocmllc3QtZGNjY2QiLCJhIjoiY200aXNueG5hMDV6czJtcTBweTFlZG9weSJ9.BV1l4NoP08wC2vlkhYR2Pg",style:"mapbox://styles/mapbox/light-v10",center:[-97.0336,32.8999],zoom:10.8,hash:!0,attributionControl:!0,customAttribution:'<b><a href="https://github.com/NYCPlanning/td-travelshed/blob/master/Transit%20Travelshed.pdf" target="_blank">Detailed Methodology</a></b>',preserveDrawingBuffer:!0},s={zscoreCategories:["<-2.5SD","-2.5SD ~ -1.5SD","-1.5SD ~ -0.5SD","-0.5SD ~ +0.5SD","+0.5SD ~ +1.5SD","+1.5SD ~ +2.5SD",">=+2.5SD"],zscoreColors:["rgba(43, 131, 186, 0.8)","rgba(128, 191, 172, 0.8)","rgba(199, 233, 173, 0.8)","rgba(255, 255, 191, 0.8)","rgba(254, 201, 128, 0.8)","rgba(241, 124, 74, 0.8)","rgba(215, 25, 28, 0.8)"],outlineColor:"rgba(0, 0, 0, 0.1)"};class h{constructor(t){this.map=null,this.containerId=t,this.popup=null,this.initializeMap()}initializeMap(){mapboxgl.accessToken=l.accessToken,this.map=new mapboxgl.Map({container:this.containerId,...l}),this.popup=new mapboxgl.Popup({closeButton:!0,closeOnClick:!1,anchor:"bottom",offset:0,maxWidth:"none"}),this.addControls()}addControls(){this.map.addControl(new mapboxgl.FullscreenControl({container:document.querySelector("body")}),"bottom-left"),this.map.addControl(new mapboxgl.NavigationControl({showCompass:!0,showZoom:!0,visualizePitch:!0}),"bottom-left")}addSource(t,e){this.map.getSource(t)?this.map.getSource(t).setData(e):this.map.addSource(t,{type:"geojson",data:e})}createLayerColor(t){const e=["match",["get",t]];return s.zscoreCategories.forEach((o,a)=>{e.push(o,s.zscoreColors[a])}),e.push("#000000"),e}addLayer(t,e,o,a="visible"){this.map.getLayer(t)&&this.map.removeLayer(t),this.map.addLayer({id:t,type:"fill",source:e,layout:{visibility:a},paint:{"fill-color":this.createLayerColor(o),"fill-outline-color":s.outlineColor}})}setLayerVisibility(t,e){this.map.getLayer(t)&&this.map.setLayoutProperty(t,"visibility",e)}addPopupEvents(t,e,o){this.map.on("click",t,a=>{const c=a.lngLat,i=a.features[0].properties,n=i[o],p=`
                <b>Tract: </b><span>${i.GEOID}</span><br>
                <b>${e}: </b><span>${n?n.toFixed(2):"N/A"}</span>
            `;this.popup.setLngLat(c).setHTML(p).addTo(this.map)}),this.map.on("mouseenter",t,()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave",t,()=>{this.map.getCanvas().style.cursor=""})}onStyleLoad(t){this.map.on("style.load",t)}}class u{constructor(){this.baseUrl="https://sji-api.dimensiondoor.xyz"}async fetchData(t){try{const e=await fetch(`${this.baseUrl}${t}`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(e){throw console.error(`Error fetching data from ${t}:`,e),e}}async getGeojsonData(t={}){const e=new URLSearchParams(t).toString(),o=e?`/geojson?${e}`:"/geojson";return this.fetchData(o)}async getOccupationIds(){return this.fetchData("/occupation_ids")}getExportUrl(t={}){const e=new URLSearchParams(t).toString();return e?`${this.baseUrl}/geojson?${e}`:`${this.baseUrl}/geojson`}}class m{constructor(t,e="map_data"){this.containerId=t,this.sourceId=e,this.mapManager=new h(t),this.apiService=new u,this.isInitialized=!1}async initialize(){throw new Error("initialize() method must be implemented by subclass")}initializeMapWithEmptySource(){return new Promise(t=>{this.mapManager.onStyleLoad(async()=>{this.mapManager.addSource(this.sourceId,{type:"FeatureCollection",features:[]}),this.isInitialized=!0,t()})})}updateExportLink(t={}){const e=document.getElementById("exp");e&&(e.href=this.apiService.getExportUrl(t))}showLoading(t){const e=document.getElementById(t);e&&(e.style.display="block",e.textContent="Loading...")}hideLoading(t){const e=document.getElementById(t);e&&(e.style.display="none")}showError(t,e){const o=document.getElementById(t);o&&(o.style.display="block",o.textContent=e,o.style.color="#dc3545")}clearMap(){this.getLayerIds().forEach(t=>{this.mapManager.map.getLayer(t)&&this.mapManager.map.removeLayer(t)}),this.mapManager.addSource(this.sourceId,{type:"FeatureCollection",features:[]}),this.updateExportLink()}getLayerIds(){return[]}}export{m as B};
//# sourceMappingURL=baseMapController-CQR30r7a.js.map
